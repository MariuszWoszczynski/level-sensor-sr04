dashboard_import:
  package_import_url: github://MariuszWoszczynski/Level-sensor-sr04/level-sensor-sr04.yaml@main
  import_full_config: true
 
substitutions:
  name: level-sensor-sr04
  friendly_name: Level sensor
  
esphome:
  name: "${name}"
  friendly_name: "${friendly_name}"
  project:
    name: esphome.level_sensor_sr04
    version: "1.0"
 
esp32:
  board: nodemcu-32s
  framework:
    type: arduino

# Status LED for connection
status_led:
  pin:
    # Blue LED
    number: GPIO02

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "QW7XkQg+3xMNyro/oVNWf35bOuaySxFrmSzinzNU6sc="

ota:
  - platform: esphome
    password: "7aecec103a1f39b3aa2251c1827129da"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  output_power: 18dB
#  static IP configuration (instead of data from the secret file)
#  manual_ip:
#    static_ip: 192.168.1.100
#    gateway: 192.168.1.1
#    subnet: 255.255.255.0
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Level-Sensor-Sr04"
#    password: "VbanXgIF187H"

captive_portal:
    
web_server:
  port: 80
  version: 3

uart:
  tx_pin: GPIO33
  rx_pin: GPIO25
  baud_rate: 9600

button:
  # Restart the ESP
  - platform: restart
    name: "Restart"

text_sensor: 
    #diagnostic info
  - platform: wifi_info                   
    ip_address:
      name: 'IP Address'
      icon: mdi:wifi
    ssid:
      name: 'Connected SSID'
      icon: mdi:wifi-strength-2

sensor:
  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"

  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "Signal %"
    entity_category: "diagnostic"
    
  - platform: "jsn_sr04t"
    name: "Distance [m]"
    id: water_distance
    unit_of_measurement: "m"
    accuracy_decimals: 2
    update_interval: 2
    filters:
      - median:
          window_size: 5
          send_every: 5
          send_first_at: 1

  - platform: template
    name: "Water Level [%]"
    unit_of_measurement: "%"
    accuracy_decimals: 0
    lambda: |-
      const float max_distance = 0.7;   // Distance at empty tank (m)
      const float min_distance = 0.3;   // Distance at full tank (m)
      float distance = id(water_distance).state;
      float percent = ((max_distance - distance) / (max_distance - min_distance)) * 100.0;
      if (percent > 100.0) return 100.0;
      if (percent < 0.0) return 0.0;
      return percent;
    update_interval: 2s

